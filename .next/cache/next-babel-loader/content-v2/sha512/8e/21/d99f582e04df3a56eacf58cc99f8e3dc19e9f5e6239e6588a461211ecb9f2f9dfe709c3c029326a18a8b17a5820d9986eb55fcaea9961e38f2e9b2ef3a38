{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/olesya/code/react-hooks/src/ImageTogglerOnScroll.js\";\nimport React, { useRef, useEffect, useState } from 'react';\n\nconst ImageTogglerOnScroll = ({\n  primaryImg,\n  secondaryImg\n}) => {\n  const imageRef = useRef(null);\n\n  const isInView = () => {\n    const rect = imageRef.current.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= window.innerHeight;\n  };\n\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n  useEffect(() => {\n    setIsloading(false);\n    setInView(isInView());\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, []);\n\n  const scrollHandler = () => {\n    setInView(isInView());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      \"margin\": \"30px\",\n      \"height\": \"500px\",\n      \"width\": \"500px\"\n    },\n    src: inView ? secondaryImg : primaryImg,\n    alt: \"\",\n    ref: imageRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ImageTogglerOnScroll;","map":{"version":3,"sources":["/Users/olesya/code/react-hooks/src/ImageTogglerOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageTogglerOnScroll","primaryImg","secondaryImg","imageRef","isInView","rect","current","getBoundingClientRect","top","bottom","window","innerHeight","isLoading","setIsLoading","inView","setInView","setIsloading","addEventListener","scrollHandler","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AAEzD,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;;AACA,QAAMO,QAAQ,GAAG,MAAM;AACnB,UAAMC,IAAI,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,qBAAjB,EAAb;AACA,WAAOF,IAAI,CAACG,GAAL,IAAY,CAAZ,IAAiBH,IAAI,CAACI,MAAL,IAAeC,MAAM,CAACC,WAA9C;AACH,GAHD;;AAKA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACe,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAD,IAAAA,SAAS,CAACX,QAAQ,EAAT,CAAT;AACAM,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAM,MAAM;AACRR,MAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCD,aAArC;AACP,KAFG;AAGH,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMA,aAAa,GAAG,MAAM;AACxBH,IAAAA,SAAS,CAACX,QAAQ,EAAT,CAAT;AACH,GAFD;;AAIA,sBACI;AACI,IAAA,KAAK,EAAE;AAAE,gBAAS,MAAX;AAAmB,gBAAS,OAA5B;AAAqC,eAAQ;AAA7C,KADX;AAEI,IAAA,GAAG,EAAIU,MAAM,GAAGZ,YAAH,GAAkBD,UAFnC;AAGI,IAAA,GAAG,EAAC,EAHR;AAGW,IAAA,GAAG,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA/BD;;AAiCA,eAAeH,oBAAf","sourcesContent":["import React, {useRef, useEffect, useState} from 'react'\n\nconst ImageTogglerOnScroll = ({primaryImg, secondaryImg}) => {\n    \n    const imageRef = useRef(null);\n    const isInView = () => {\n        const rect = imageRef.current.getBoundingClientRect();\n        return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [inView, setInView] = useState(false);\n\n    useEffect(() => {\n        setIsloading(false);\n        setInView(isInView());\n        window.addEventListener(\"scroll\", scrollHandler);\n        return() => {\n            window.removeEventListener(\"scroll\", scrollHandler);\n    }\n    }, []);\n\n    const scrollHandler = () => {\n        setInView(isInView());\n    }\n\n    return (\n        <img\n            style={{ \"margin\":\"30px\", \"height\":\"500px\", \"width\":\"500px\"}}\n            src = {inView ? secondaryImg : primaryImg}\n            alt=\"\" ref={imageRef}\n        />\n    )\n}\n\nexport default ImageTogglerOnScroll;\n"]},"metadata":{},"sourceType":"module"}